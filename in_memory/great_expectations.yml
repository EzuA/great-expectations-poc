# Welcome to Great Expectations! Always know what to expect from your data.
#
# Here you can define datasources, batch kwargs generators, integrations and
# more. This file is intended to be committed to your repo. For help with
# configuration please:
#   - Read our docs: https://docs.greatexpectations.io/en/latest/reference/spare_parts/data_context_reference.html#configuration
#   - Join our slack channel: http://greatexpectations.io/slack

# config_version refers to the syntactic version of this config file, and is used in maintaining backwards compatibility
# It is auto-generated and usually does not need to be changed.
config_version: 3.0

# Datasources tell Great Expectations where your data lives and how to get it.
# You can use the CLI command `great_expectations datasource new` to help you
# add a new datasource. Read more at https://docs.greatexpectations.io/en/latest/reference/core_concepts/datasource.html
datasources:
  spark_datasource:
    module_name: great_expectations.datasource
    class_name: Datasource
    data_connectors:
      default_runtime_data_connector_name:
        batch_identifiers:
          - batch_id
        module_name: great_expectations.datasource.data_connector
        class_name: RuntimeDataConnector
    execution_engine:
      module_name: great_expectations.execution_engine
      force_reuse_spark_context: True
      class_name: SparkDFExecutionEngine

  pandas_datasource:
    class_name: Datasource
    module_name: great_expectations.datasource
    execution_engine:
      module_name: great_expectations.execution_engine
      class_name: PandasExecutionEngine
    data_connectors:
        default_runtime_data_connector_name:
            class_name: RuntimeDataConnector
            module_name: "great_expectations.datasource.data_connector"
            batch_identifiers:
                - default_identifier_name

# The plugins_directory will be added to your python path for custom modules
# used to override and extend Great Expectations.
# plugins_directory: plugins/

stores:
# Stores are configurable places to store things like Expectations, Validations
# Data Docs, and more. These are for advanced users only - most users can simply
# leave this section alone.
#
# Three stores are required: expectations, validations, and
# evaluation_parameters, and must exist with a valid store entry. Additional
# stores can be configured for uses such as data_docs, etc.
  expectations_store:
    class_name: ExpectationsStore
    store_backend:
      class_name: TupleS3StoreBackend
      bucket: "{{BUCKET_NAME}}"
      prefix: "{{EXPECTATIONS_STORE_PREFIX}}"

  # expectations_store:
  #   class_name: ExpectationsStore
  #   store_backend:
  #     class_name: TupleFilesystemStoreBackend
  #     base_directory: expectations/

  validations_store:
    class_name: ValidationsStore
    store_backend:
      class_name: TupleS3StoreBackend
      bucket: "{{BUCKET_NAME}}"
      prefix: "{{VALIDATIONS_STORE_PREFIX}}"

  # validations_store:
  #   class_name: ValidationsStore
  #   store_backend:
  #     class_name: TupleFilesystemStoreBackend
  #     base_directory: uncommitted/validations/

  evaluation_parameter_store:
    # Evaluation Parameters enable dynamic expectations. Read more here:
    # https://docs.greatexpectations.io/en/latest/reference/core_concepts/evaluation_parameters.html
    class_name: EvaluationParameterStore

  checkpoints_store:
    class_name: CheckpointStore
    store_backend:
      class_name: TupleS3StoreBackend
      bucket: "{{BUCKET_NAME}}"
      prefix: "{{CHECKPOINTS_STORE_PREFIX}}"

  # checkpoint_store:
  #   class_name: CheckpointStore
  #   store_backend:
  #     class_name: TupleFilesystemStoreBackend
  #     suppress_store_backend_id: true
  #     base_directory: checkpoints/


expectations_store_name: expectations_store
validations_store_name: validations_store
evaluation_parameter_store_name: evaluation_parameter_store
checkpoint_store_name: checkpoints_store

data_docs_sites:
  # Data Docs make it simple to visualize data quality in your project. These
  # include Expectations, Validations & Profiles. The are built for all
  # Datasources from JSON artifacts in the local repo including validations &
  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/en/latest/reference/core_concepts/data_docs.html
  s3_site:
    class_name: SiteBuilder
    # set to false to hide how-to buttons in Data Docs
    show_how_to_buttons: true
    store_backend:
      class_name: TupleS3StoreBackend
      bucket: "{{BUCKET_NAME}}"
      prefix: "{{S3_SITE_STORE_PREFIX}}"

    site_index_builder:
      class_name: DefaultSiteIndexBuilder
      show_cta_footer: True

validation_operators:
  action_list_operator:
    class_name: ActionListValidationOperator
    action_list:
      - name: store_validation_result
        action:
          class_name: StoreValidationResultAction
      - name: store_evaluation_params
        action:
          class_name: StoreEvaluationParametersAction
      - name: update_data_docs
        action:
          class_name: UpdateDataDocsAction
